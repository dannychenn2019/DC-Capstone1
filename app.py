{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e6b5c98a-d837-4c1b-aa72-bf21f37cabc5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-03-09 14:29:22.993 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run /opt/anaconda3/lib/python3.12/site-packages/ipykernel_launcher.py [ARGUMENTS]\n"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the dataset\n",
    "file_path = \"/Users/dannychen/Downloads/student_performance_dataset.csv\"\n",
    "df = pd.read_csv(file_path)\n",
    "\n",
    "# Set Streamlit app configuration\n",
    "st.set_page_config(page_title=\"Student Performance Analysis\", page_icon=\"ðŸ“Š\", layout=\"wide\")\n",
    "\n",
    "# Sidebar navigation\n",
    "st.sidebar.title(\"Navigation\")\n",
    "page = st.sidebar.radio(\"Go to\", [\"Home\", \"Overview of the Data\", \"Exploratory Data Analysis (EDA)\"])\n",
    "\n",
    "# Home Page\n",
    "if page == \"Home\":\n",
    "    st.title(\"ðŸ“Š Student Performance Analysis\")\n",
    "    st.image(\"https://images.unsplash.com/photo-1596495577886-d920f1a5014d\", use_column_width=True)\n",
    "    st.markdown(\"\"\"\n",
    "        Welcome to the **Student Performance Analysis** app! ðŸŽ“  \n",
    "        This app explores a dataset containing information about students' academic performance, study habits, and external factors.  \n",
    "        Use the sidebar to navigate between pages and discover insights about what influences final exam scores. ðŸš€  \n",
    "    \"\"\")\n",
    "\n",
    "# Overview of the Data\n",
    "elif page == \"Overview of the Data\":\n",
    "    st.title(\"ðŸ“‹ Overview of the Data\")\n",
    "    st.write(\"This section provides a brief overview of the dataset, including key features and data types.\")\n",
    "    \n",
    "    st.subheader(\"Sample Data\")\n",
    "    st.dataframe(df.head())\n",
    "\n",
    "    st.subheader(\"Dataset Information\")\n",
    "    st.write(\"Number of rows:\", df.shape[0])\n",
    "    st.write(\"Number of columns:\", df.shape[1])\n",
    "\n",
    "    st.subheader(\"Column Data Types\")\n",
    "    st.write(df.dtypes)\n",
    "\n",
    "    st.subheader(\"Summary Statistics\")\n",
    "    st.write(df.describe())\n",
    "\n",
    "# EDA Page\n",
    "elif page == \"Exploratory Data Analysis (EDA)\":\n",
    "    st.title(\"ðŸ“Š Exploratory Data Analysis (EDA)\")\n",
    "    st.write(\"Visualizations to explore distributions and relationships within the data.\")\n",
    "\n",
    "    # Histogram for numerical features\n",
    "    st.subheader(\"Distribution of Numerical Features\")\n",
    "    num_columns = [\"Study_Hours_per_Week\", \"Attendance_Rate\", \"Past_Exam_Scores\", \"Final_Exam_Score\"]\n",
    "    for col in num_columns:\n",
    "        fig, ax = plt.subplots()\n",
    "        sns.histplot(df[col], bins=20, kde=True, ax=ax, color=\"skyblue\")\n",
    "        ax.set_title(f\"Distribution of {col}\")\n",
    "        st.pyplot(fig)\n",
    "\n",
    "    # Scatter plots for relationships between features\n",
    "    st.subheader(\"Scatter Plots: Relationships between Features\")\n",
    "    scatter_features = [(\"Study_Hours_per_Week\", \"Final_Exam_Score\"), (\"Past_Exam_Scores\", \"Final_Exam_Score\")]\n",
    "    for x, y in scatter_features:\n",
    "        fig, ax = plt.subplots()\n",
    "        sns.scatterplot(data=df, x=x, y=y, hue=\"Gender\", palette=\"viridis\", ax=ax)\n",
    "        ax.set_title(f\"{y} vs {x}\")\n",
    "        st.pyplot(fig)\n",
    "\n",
    "    # Box plots for categorical features\n",
    "    st.subheader(\"Box Plots: Categorical Features vs Final Exam Score\")\n",
    "    cat_columns = [\"Parental_Education_Level\", \"Internet_Access_at_Home\", \"Extracurricular_Activities\", \"Gender\"]\n",
    "    for col in cat_columns:\n",
    "        fig, ax = plt.subplots()\n",
    "        sns.boxplot(data=df, x=col, y=\"Final_Exam_Score\", palette=\"Set2\", ax=ax)\n",
    "        ax.set_title(f\"Final Exam Score by {col}\")\n",
    "        plt.xticks(rotation=45)\n",
    "        st.pyplot(fig)\n",
    "\n",
    "    # Bar charts for categorical data\n",
    "    st.subheader(\"Bar Charts: Categorical Data Distribution\")\n",
    "    for col in cat_columns:\n",
    "        fig, ax = plt.subplots()\n",
    "        df[col].value_counts().plot(kind='bar', color='teal', ax=ax)\n",
    "        ax.set_title(f\"Distribution of {col}\")\n",
    "        st.pyplot(fig)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
